@page "/Profil";
@using PDSA_System.Shared.Models
@inject HttpClient Http;

<div class="content">
    <h1>Profil</h1>
    <hr />
    <div class="form-group">
        <form>
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="fornavn">Fornavn</label>
                <input type="text" class="form-control" id="fornavn" name="fornavn" @bind="@bruker.Fornavn" placeholder="Fornavn" />
            </div>
            <div class="form-group">
                <label for="etternavn">Etternavn</label>
                <input type="text" class="form-control" id="etternavn" name="etternavn" @bind="@bruker.Etternavn" placeholder="Etternavn" />
            </div>
            <div class="form-group">
                <label for="epost">Epost</label>
                <input type="text" class="form-control" id="epost" name="epost" @bind="@bruker.Email" placeholder="Epost" />

            </div>
            <div class="form-group">
                <!--TODO: Må ha inn logikk her for å catche feil input av passord-->
                <label for="passord">Passord</label>
                <input type="text" class="form-control" id="passord" name="passord" @bind="@bruker.PassordHash" placeholder="Passord" />
            </div>
            <button type="button" class="btn" @onclick="@ModalCancel">Avbryt</button>
            <button type="button" class="btn btn-success" @onclick="@(()=>SaveItem(bruker.AnsattNr))">Oppdater</button>
        </form>       
    </div>
</div>

        
@code {

    //GET-metode for å hente alle brukere i db. Basert på Victor sitt
    private Bruker[]? _bruker;


    protected override async Task OnInitializedAsync() =>
    _bruker = await Http.GetFromJsonAsync<Bruker[]>("/api/Bruker");

    // Edit

    private Bruker bruker = new Bruker();

    private void EditItem(int id) => bruker = _bruker.Single(i => i.AnsattNr == id);


    private async Task SaveItem(int id) =>
    await Http.PutAsJsonAsync($"/apiBruker/admin/UpdateBruker/{id}", bruker);

    // Modal, vet ikke hva dette gjør enda virker som det skal inkluderes hehe.
    bool showModal = false;

    void ModalShow() => showModal = true;
    void ModalCancel() => showModal = false;
    void ModalOk()
    {
        Console.WriteLine("Modal ok");
        showModal = false;
    }


}
